#!/bin/bash

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Ensure Python 3.11 is installed
if ! command_exists python3.11; then
    echo -e "${RED}FATAL: Python 3.11 is not installed. Please install it and try again.${NC}"
    exit 1
fi

# Ensure pip is installed
if ! command_exists pip; then
    echo -e "${RED}FATAL: pip is not installed. Please install it and try again.${NC}"
    exit 1
fi

# Check if virtual environment is already activated
if [ -z "$VIRTUAL_ENV" ]; then
    # Check if .venv directory exists
    if [ ! -d ".venv" ]; then
        echo -e "${GREEN}INFO: Creating virtual environment...${NC}"
        # Create a new virtual environment if .venv doesn't exist
        if ! python3.11 -m venv .venv; then
            echo -e "${RED}FATAL: Failed to create virtual environment.${NC}"
            exit 1
        fi

        echo -e "${GREEN}INFO: Activating virtual environment...${NC}"
        if ! source .venv/bin/activate; then
            echo -e "${RED}FATAL: Failed to activate virtual environment.${NC}"
            exit 1
        fi
        echo -e "${GREEN}INFO: Virtual environment activated.${NC}"

        echo -e "${GREEN}INFO: Installing Python dependencies...${NC}"
        if ! pip install -r services/restapi/requirements.txt; then
            echo -e "${RED}FATAL: Failed to install dependencies.${NC}"
            exit 1
        fi

        echo -e "${GREEN}INFO: Installing API module...${NC}"
        if ! pip install -e services/restapi; then
            echo -e "${RED}FATAL: Failed to compile restapi module.${NC}"
            exit 1
        fi

    fi

else

    echo -e "${GREEN}INFO: Activating virtual environment...${NC}"
    # Activate the virtual environment
    if ! source .venv/bin/activate; then
        echo -e "${RED}FATAL: Failed to activate virtual environment.${NC}"
        exit 1
    fi
    echo -e "${GREEN}INFO: Virtual environment activated.${NC}"
fi

echo -e "${GREEN}INFO: Setup completed successfully.${NC}"
